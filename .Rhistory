sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
plot(zz)
plot(zz, asp = 1)
var(zz)
library(mvnormtest)
install.packages("mvnormtest")
library(mvnormtest)
mshapiro.test(t(zz))
z <- kde2d(zz[,1], zz[,2], n=50)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
plot(zz, xlab="X label", ylab="Y label", pch=19, cex=.4)
contour(z, drawlabels=FALSE, nlevels=k, col=my.cols, add=TRUE)
contour(z, drawlabels=FALSE, nlevels=11, col=my.cols, add=TRUE)
plot(zz, xlab="X label", ylab="Y label", pch=19, cex=.4)
contour(z, drawlabels=FALSE, nlevels=11, col=my.cols, add=TRUE)
plot(zz, xlab="X label", ylab="Y label", pch=19, cex=.4)
contour(z, drawlabels=FALSE, nlevels=11, add=TRUE)
abline(h=mean(X[,2]), v=mean(X[,1]), lwd=2)
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
plot(zz, asp = 1)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
plot(zz, xlab="X label", ylab="Y label", pch=19, cex=.4)
contour(z, drawlabels=FALSE, nlevels=11, add=TRUE)
abline(h=mean(zz[,2]), v=mean(zz[,1]), lwd=2)
legend("topleft", paste("R=", round(cor(zz[1,2],2)), bty="n")
library(mvnormtest)
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
plot(zz, asp = 1)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
plot(zz, xlab="X label", ylab="Y label", pch=19, cex=.4, asp = 1)
contour(z, drawlabels=FALSE, nlevels=11, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 1)
contour(z, drawlabels=FALSE, nlevels=11, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "RdYlBu"))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "RdYlBu"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 1)
contour(z, drawlabels=FALSE, nlevels=k, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "RdYlBu"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 1)
contour(z, drawlabels=FALSE, nlevels=k, cols = my.cols, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "RdYlBu"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 1)
contour(z, drawlabels=FALSE, nlevels=k, col = my.cols, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "Blues"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 1)
contour(z, drawlabels=FALSE, nlevels=k, col = my.cols, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "Blues"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 0.5)
contour(z, drawlabels=FALSE, nlevels=k, col = my.cols, add=TRUE)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "Blues"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 0.5)
contour(z, drawlabels=FALSE, nlevels=k, col = my.cols, add=TRUE, lwd=2)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(5000)
z2 <- rnorm(5000)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "Blues"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 0.5)
contour(z, drawlabels=FALSE, nlevels=k, col = my.cols, add=TRUE, lwd=2)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my.cols <- rev(brewer.pal(k, "Blues"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 0.5)
contour(z, drawlabels=FALSE, nlevels=k, col = my.cols, add=TRUE, lwd=2)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(4)
z1 <- rnorm(500)
z2 <- rnorm(500)
sigma <- matrix(c(9, 12, 12, 25), nrow = 2)
a <- t(chol(sigma))
b <- c(1,-2)
z <- rbind(z1, z2)
zz <- t(b + a %*% z)
var(zz)
library(MASS)
z <- kde2d(zz[,1], zz[,2], n=50)
library(RColorBrewer)
k <- 10
my_colors <- rev(brewer.pal(k, "Blues"))
plot(zz, xlab="x1", ylab="x2", pch=19, cex=.4, asp = 0.5)
contour(z, drawlabels=FALSE, nlevels=k, col = my_colors, add=TRUE, lwd=2)
library(mvnormtest)
mshapiro.test(t(zz))
set.seed(20)
n = 5000
# what the function looks like
h <- function(x) exp(-0.5 * (x - 2) ^ 2 - 0.1 * abs( sin(2*x) ) )
v <- seq(0,5, by = 0.01)
plot(v, h(v), type = "l")
x <- runif(n, 0, 5)
h_X <- h(x)
hbar_n <- cumsum(h(x))/c(1:n)
mu_n <- hbar_n * 5
# estimate the variance(hbar_n)
var_m <- function(m){
(1/m^2) * sum( (h_X[1:m] - hbar_n[m] ) ^ 2 )
}
# running variance
v_n <- apply( t(1:n), 2, var_m )
# running standard error
s_n <- sqrt(v_n)
plot(mu_n[1:1000], type = "l", ylim = c(0, 4))
lines(5 * (hbar_n[1:1000] + 2 * s_n), type = "l", col = "blue")
lines(5 * (hbar_n[1:1000] - 2 * s_n), type = "l", col = "blue")
hbar.n[1000]
set.seed(20)
n = 5000
# what the function looks like
h <- function(x) exp(-0.5 * (x - 2) ^ 2 - 0.1 * abs( sin(2*x) ) )
v <- seq(0,5, by = 0.01)
plot(v, h(v), type = "l")
x <- runif(n, 0, 5)
h_X <- h(x)
hbar_n <- cumsum(h(x))/c(1:n)
mu_n <- hbar_n * 5
# estimate the variance(hbar_n)
var_m <- function(m){
(1/m^2) * sum( (h_X[1:m] - hbar_n[m] ) ^ 2 )
}
# running variance
v_n <- apply( t(1:n), 2, var_m )
# running standard error
s_n <- sqrt(v_n)
plot(mu_n[1:1000], type = "l", ylim = c(0, 4))
lines(5 * (hbar_n[1:1000] + 2 * s_n), type = "l", col = "blue")
lines(5 * (hbar_n[1:1000] - 2 * s_n), type = "l", col = "blue")
hbar_n[1000]
hbar_n[1000] * 5
set.seed(20)
n = 5000
# what the function looks like
h <- function(x) exp(-0.5 * (x - 2) ^ 2 - 0.1 * abs( sin(2*x) ) )
v <- seq(0,5, by = 0.01)
plot(v, h(v), type = "l")
x <- runif(n, 0, 5)
h_X <- h(x)
hbar_n <- cumsum(h(x))/c(1:n)
mu_n <- hbar_n * 5
# estimate the variance(hbar_n)
var_m <- function(m){
(1/m^2) * sum( (h_X[1:m] - hbar_n[m] ) ^ 2 )
}
# running variance
v_n <- apply( t(1:n), 2, var_m )
# running standard error
s_n <- sqrt(v_n)
plot(mu_n[1:1000], type = "l") # ylim = c(0, 4)
lines(5 * (hbar_n[1:1000] + 2 * s_n), type = "l", col = "blue")
lines(5 * (hbar_n[1:1000] - 2 * s_n), type = "l", col = "blue")
hbar_n[1000]
hbar_n[1000] * 5
set.seed(20)
n = 5000
# what the function looks like
h <- function(x) exp(-0.5 * (x - 2) ^ 2 - 0.1 * abs( sin(2*x) ) )
v <- seq(0,5, by = 0.01)
plot(v, h(v), type = "l")
x <- runif(n, 0, 5)
h_X <- h(x)
hbar_n <- cumsum(h(x))/c(1:n)
mu_n <- hbar_n * 5
# estimate the variance(hbar_n)
var_m <- function(m){
(1/m^2) * sum( (h_X[1:m] - hbar_n[m] ) ^ 2 )
}
# running variance
v_n <- apply( t(1:n), 2, var_m )
# running standard error
s_n <- sqrt(v_n)
plot(1:1000, mu_n[1:1000], type = "l", ylim = c(0, 4))
lines(5 * (hbar_n[1:1000] + 2 * s_n), type = "l", col = "blue")
lines(5 * (hbar_n[1:1000] - 2 * s_n), type = "l", col = "blue")
hbar_n[5000]
hbar_n[5000] * 5
set.seed(20)
n = 5000
# what the function looks like
h <- function(x) exp(-0.5 * (x - 2) ^ 2 - 0.1 * abs( sin(2*x) ) )
v <- seq(0,5, by = 0.01)
plot(v, h(v), type = "l")
x <- runif(n, 0, 5)
h_X <- h(x)
hbar_n <- cumsum(h(x))/c(1:n)
mu_n <- hbar_n * 5
# estimate the variance(hbar_n)
var_m <- function(m){
(1/m^2) * sum( (h_X[1:m] - hbar_n[m] ) ^ 2 )
}
# running variance
v_n <- apply( t(1:n), 2, var_m )
# running standard error
s_n <- sqrt(v_n)
plot(1:1000, mu_n[1:1000], type = "l", ylim = c(0, 4))
lines(1:1000, 5 * (hbar_n[1:1000] + 2 * s_n), type = "l", col = "blue")
set.seed(20)
n = 5000
# what the function looks like
h <- function(x) exp(-0.5 * (x - 2) ^ 2 - 0.1 * abs( sin(2*x) ) )
v <- seq(0,5, by = 0.01)
plot(v, h(v), type = "l")
x <- runif(n, 0, 5)
h_X <- h(x)
hbar_n <- cumsum(h(x))/c(1:n)
mu_n <- hbar_n * 5
# estimate the variance(hbar_n)
var_m <- function(m){
(1/m^2) * sum( (h_X[1:m] - hbar_n[m] ) ^ 2 )
}
# running variance
v_n <- apply( t(1:n), 2, var_m )
# running standard error
s_n <- sqrt(v_n)
plot(1:1000, mu_n[1:1000], type = "l", ylim = c(0, 4))
lines(1:1000, 5 * (hbar_n[1:1000] + 2 * s_n[1:1000]), type = "l", col = "blue")
lines(1:1000, 5 * (hbar_n[1:1000] - 2 * s_n[1:1000]), type = "l", col = "blue")
hbar_n[5000]
hbar_n[5000] * 5
x
x <- 1:10
x
x <- 1:6
x
mean(1:2)
sd(1:2)
mean(1:3)
sd(1:3)
mean(1:4)
sd(1:4)
mean(1:5)
sd(1:5)
mean(1:6)
sd(1:6)
estint = cumsum(x)/(1:6)
estint
running_mean = cumsum(x)/(1:6)
running_sd=sqrt(cumsum((x-estint)^2))/(1:10)
running_sd=sqrt(cumsum((x-estint)^2))/(1:6)
running_sd
running_sd=sqrt(cumsum((x-estint)^2))
running_sd
running_mean = cumsum(x)/(1:6)
running_mean
running_sd = sqrt( cumsum((x-running_mean)^2) )
running_sd
running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6)
running_sd
mean(1:2)
sd(1:2)/sqrt(2)
mean(1:3)
sd(1:3)/sqrt(3)
mean(1:4)
sd(1:4)/sqrt(4)
mean(1:5)
sd(1:5)/sqrt(5)
mean(1:6)
sd(1:6)/sqrt(6)
running_mean = cumsum(x)/(1:6)
x
x-running_mean
sd(1)
running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6)
running_sd
sd(1:2)/sqrt(2)
sd(1:3)/sqrt(3)
sd(1:2)/sqrt(2)
sd(1:3)/sqrt(3)
sd(1:3)
running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6)
c(mean(1), mean(1:2), mean(1:3), mean(1:4), mean(1:5), mean(1:6))
running_mean = cumsum(x)/(1:6)
( running_mean = cumsum(x)/(1:6) )
c( sd(1:2)/sqrt(2), sd(1:3)/sqrt(3), sd(1:4)/sqrt(4), sd(1:5)/sqrt(5), sd(1:6)/sqrt(6) )
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
c(mean(1), mean(1:2), mean(1:3), mean(1:4), mean(1:5), mean(1:6))
( running_mean = cumsum(x)/(1:6) )
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
( running_mean = cumsum(x)/(1:6) )/( running_mean = cumsum(x)/(1:6) )
( running_mean = cumsum(x)/(1:6) )/( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
( running_mean = cumsum(x)/(1:6) )
( running_mean = cumsum(x)/(1:6) )
c( sd(1:2)/sqrt(2), sd(1:3)/sqrt(3), sd(1:4)/sqrt(4), sd(1:5)/sqrt(5), sd(1:6)/sqrt(6) ) / ( ( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1] )
c( sd(1:2)/sqrt(2), sd(1:3)/sqrt(3), sd(1:4)/sqrt(4), sd(1:5)/sqrt(5), sd(1:6)/sqrt(6) ) / ( ( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1] )^2
c( sd(1:2)/sqrt(1), sd(1:3)/sqrt(2), sd(1:4)/sqrt(3), sd(1:5)/sqrt(4), sd(1:6)/sqrt(6) ) / ( ( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1] )
c( sd(1:2)/sqrt(2), sd(1:3)/sqrt(3), sd(1:4)/sqrt(4), sd(1:5)/sqrt(5), sd(1:6)/sqrt(6) )
c( var(1:2)/sqrt(2), sd(1:3)/sqrt(3), sd(1:4)/sqrt(4), sd(1:5)/sqrt(5), sd(1:6)/sqrt(6) )
c( var(1:2)/2, var(1:3)/3, var(1:4)/4, var(1:5)/5, var(1:6)/6 )
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
((1-1.5)^2 + .5^2)/2
(1^2 + 1^2)/3
sqrt((1^2 + 1^2)/3)
sqrt((1^2 + 1^2))/3
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
?cumSD
x <- 1:6
c(mean(1), mean(1:2), mean(1:3), mean(1:4), mean(1:5), mean(1:6))
( running_mean = cumsum(x)/(1:6) )
c( sd(1:2)/sqrt(2), sd(1:3)/sqrt(3), sd(1:4)/sqrt(4), sd(1:5)/sqrt(5), sd(1:6)/sqrt(6) )
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
c( var(1:2)*(1/2), var(1:3)*(2/3), var(1:4)*(3/4), var(1:5)*(4/5), var(1:6)*(5/6) )
var(1:6)
mean(1:6)
(1:6 - 3.5)
(1:6 - 3.5)^2
mean((1:6 - 3.5)^2)
var(1:6)*5/6
(var(1:6)*5/6)/sqrt(6)
sqrt((var(1:6)*5/6)/6)
c( var(1:2)*(1/2)/2, var(1:3)*(2/3)/3, var(1:4)*(3/4)/4, var(1:5)*(4/5)/5, var(1:6)*(5/6)/6 )
sqrt(c( var(1:2)*(1/2)/2, var(1:3)*(2/3)/3, var(1:4)*(3/4)/4, var(1:5)*(4/5)/5, var(1:6)*(5/6)/6 ))
( running_sd = sqrt( cumsum( (x - running_mean)^2) )/(1:6) )[-1]
running_sd =
(x - running_mean)
running_sd =
(x - running_mean)
(x - running_mean)
n <- 10^6
randz <- rnorm(n)
posz <- randz[rand >= 0]
mean(posz)
randz <- rnorm(n)
set.seed(1)
n <- 10^6
randz <- rnorm(n)
posz <- randz[rand >= 0]
mean(posz)
posz <- randz[randz >= 0]
mean(posz)
sqrt(2/pi)
f <- function(x) 2*dnorm(x)
g <- function(x) dexp(x, rate = 2)
x <- rexp(n, rate = 2)
mean(x * f(x)/g(x))
set.seed(1)
n <- 10^6
f <- function(x) 2*dnorm(x)
g <- function(x) dexp(x, rate = 2)
x <- rexp(n, rate = 2)
mean(x * f(x)/g(x))
set.seed(1)
n <- 10^7
f <- function(x) 2*dnorm(x)
g <- function(x) dexp(x, rate = 2)
x <- rexp(n, rate = 2)
mean(x * f(x)/g(x))
set.seed(1)
n <- 10^7
randz <- rnorm(n)
posz <- randz[randz >= 0]
mean(posz)
sqrt(2/pi)
library(nycflights13)
data(flights)
dim(flights)
pwd()
pwd
setwd("C:/Users/miles/OneDrive/Teaching/131/stats131")
write.csv(flights, 'nycflights.csv')
q()
